substitutions:
  # https://esphome.io/guides/configuration-types.html#substitutions
  device_name: sct013_30a
  friendly_name: SCT013 30A
  # static_ip: !secret sct013_30a_ip
  mains_voltage: '120' # Mains voltage of the device being measured
  ### Calibrate using https://esphome.io/components/sensor/ct_clamp.html#calibration
  ### Calibrated with ESPHome logs & Kill-A-Watt using a 100w incandescent bulb & an older flat-panel TV
  calibrate_linear_1: '0.00026 -> 0.0'  # bulb powered off (esphome-logs -> kill-a-watt)
  calibrate_linear_2: '0.00543 -> 0.8'  # bulb using 0.8a (esphome-logs -> kill-a-watt)
  calibrate_linear_3: '0.01199 -> 1.92' # tv pulling 1.92a (esphome-logs -> kill-a-watt)

  wifi_ssid: !secret wifi_ssid_not
  wifi_password: !secret wifi_password_not
  gateway: !secret wifi_gateway_not
  subnet: !secret wifi_subnet_not
  dns1: !secret wifi_dns1_not
  ap_password: !secret esphome_ap_password
  api_password: !secret esphome_api_password
  ota_password: !secret esphome_ota_password



esphome:
  # https://esphome.io/components/esphome
  name: ${device_name}
  platform: ESP8266
  board: d1_mini



# https://esphome.io/components/wifi
wifi:
  ssid: ${wifi_ssid}
  password: ${wifi_password}
  # manual_ip:
  #   static_ip: ${static_ip}
  #   gateway: ${gateway}
  #   subnet: ${subnet}
  #   dns1: ${dns1}
  ap:
    ssid: ${friendly_name} E-AP
    password: ${ap_password}
  # use_address: 192.168.11.123



# https://esphome.io/components/captive_portal.html
captive_portal:



# # https://esphome.io/components/web_server.html
# web_server:
#   port: 80



# https://esphome.io/components/logger
logger:
  baud_rate: 0



# https://esphome.io/components/api
api:
  password: !secret esphome_api_password



# https://esphome.io/components/ota
ota:
  password: !secret esphome_ota_password



sensor:
  # Internal only. Used by other sensor components
  # https://esphome.io/components/sensor/adc.html
  - platform: adc
    pin: A0
    id: adc_sensor   

  # Internal only. Provides values in the logs for use in calibration
  # e.g. '[D][sensor:099]: 'ct_clamp raw value': Sending state 0.00542 mA with 5 decimals of accuracy'
  # https://esphome.io/components/sensor/ct_clamp.html
  - platform: ct_clamp
    sensor: adc_sensor
    name: "ct_clamp raw value"
    internal: true
    update_interval: 10s
    unit_of_measurement: mA
    accuracy_decimals: 5

  # Internal only. Provides Amps value for '${friendly_name} Current' template
  # e.g. '[D][sensor:099]: 'ct_clamp calibrated value': Sending state 0.79312 A with 2 decimals of accuracy'
  - platform: ct_clamp
    sensor: adc_sensor
    name: "ct_clamp calibrated value"
    id: the_clamp
    internal: true
    update_interval: 10s
    filters:
      - calibrate_linear:
          - ${calibrate_linear_1}
          - ${calibrate_linear_2}
          - ${calibrate_linear_3}

  # Exposed to HA. Lambda reports anything below 0.1A as 0; prevents negative values & EM interference causing spurious readings 
  # https://esphome.io/components/sensor/template.html
  - platform: template
    name: "${friendly_name} Current"
    id: templated_sensor
    lambda: |-
      if (id(the_clamp).state > 0.1){
        return (id(the_clamp).state);
      } else {
        return 0.0;
      }
    device_class: current
    update_interval: 10s
    accuracy_decimals: 2
    unit_of_measurement: A

  # Exposed to HA. Converts the Amps to Watts; uses value from '${friendly_name} Current' template
  - platform: template
    name: "${friendly_name} Watts"
    id: templated_watts
    lambda: |-
      return id(templated_sensor).state * ${mains_voltage};
    accuracy_decimals: 0
    update_interval: 10s
    device_class: power
    unit_of_measurement: W

  # Exposed to HA. Tracks daily kW usage; uses value from '${friendly_name} Watts' template
  # https://esphome.io/components/sensor/total_daily_energy.html
  - platform: total_daily_energy
    name: "${friendly_name} Daily Energy"
    unit_of_measurement: 'kW'
    power_id: templated_watts
    filters:
      - multiply: 0.001
    device_class: energy



# https://esphome.io/components/status_led
status_led: 
  pin:
    number: GPIO2   # Wemos D1 Mini onboard LED
    inverted: true



# https://esphome.io/components/time.html
time:
  # https://esphome.io/components/time.html#home-assistant-time-source
  - platform: homeassistant
    id: homeassistant_time
